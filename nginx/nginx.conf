events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Logging with enhanced format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=30r/s;

    # Upstream health checks and load balancing
    upstream admin_backend {
        server admin-backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream wellknown_backend {
        server wellknown-backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream admin_frontend {
        server admin-frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream wellknown_frontend {
        server wellknown-frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Map for WebSocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS headers for API endpoints
    map $request_method $cors_method {
        OPTIONS 11;
        GET     1;
        POST    1;
        PUT     1;
        DELETE  1;
        PATCH   1;
        default 0;
    }

    # Admin Backend API
    server {
        listen 80;
        server_name admin-api.localhost;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Health check endpoint (bypass proxy)
        location /health/ {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # API endpoints
        location / {
            # CORS handling
            if ($cors_method = 11) {
                add_header Access-Control-Allow-Origin "$http_origin" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRFToken" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age 86400 always;
                add_header Content-Length 0;
                add_header Content-Type "text/plain charset=UTF-8";
                return 204;
            }
            
            if ($cors_method = 1) {
                add_header Access-Control-Allow-Origin "$http_origin" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Expose-Headers "Content-Disposition, Content-Length, Content-Type" always;
            }
            
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Static files with caching
        location /static/ {
            alias /static/admin/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Fallback for missing static files
            try_files $uri $uri/ =404;
            
            # Security
            location ~* \.(php|jsp|cgi)$ {
                deny all;
            }
        }

        # Media files with caching
        location /media/ {
            alias /media/admin/;
            expires 30d;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
            
            # Fallback for missing media files
            try_files $uri $uri/ =404;
            
            # Security
            location ~* \.(php|jsp|cgi)$ {
                deny all;
            }
        }
    }

    # Well-known Backend API
    server {
        listen 80;
        server_name wellknown-api.localhost;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Health check endpoint (bypass proxy)
        location /health/ {
            proxy_pass http://wellknown_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # API endpoints
        location / {
            # CORS handling
            if ($cors_method = 11) {
                add_header Access-Control-Allow-Origin "$http_origin" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRFToken" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age 86400 always;
                add_header Content-Length 0;
                add_header Content-Type "text/plain charset=UTF-8";
                return 204;
            }
            
            if ($cors_method = 1) {
                add_header Access-Control-Allow-Origin "$http_origin" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Expose-Headers "Content-Disposition, Content-Length, Content-Type" always;
            }
            
            proxy_pass http://wellknown_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Static files with caching
        location /static/ {
            alias /static/wellknown/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Fallback for missing static files
            try_files $uri $uri/ =404;
            
            # Security
            location ~* \.(php|jsp|cgi)$ {
                deny all;
            }
        }

        # Media files with caching
        location /media/ {
            alias /media/wellknown/;
            expires 30d;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
            
            # Fallback for missing media files
            try_files $uri $uri/ =404;
            
            # Security
            location ~* \.(php|jsp|cgi)$ {
                deny all;
            }
        }
    }

    # Admin Frontend
    server {
        listen 80;
        server_name admin.localhost;

        # Rate limiting
        limit_req zone=frontend burst=50 nodelay;

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # WebSocket support for Vite HMR
        location /vite-dev-server/ {
            proxy_pass http://admin_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket upgrade
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://admin_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Caching headers
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Main application
        location / {
            proxy_pass http://admin_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for development HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Error handling with fallback
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # SPA fallback
            try_files $uri $uri/ @fallback;
        }

        # Fallback for SPA routing
        location @fallback {
            proxy_pass http://admin_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Well-known Frontend
    server {
        listen 80;
        server_name wellknown.localhost;

        # Rate limiting
        limit_req zone=frontend burst=50 nodelay;

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # WebSocket support for Vite HMR
        location /vite-dev-server/ {
            proxy_pass http://wellknown_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket upgrade
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://wellknown_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Caching headers
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Main application
        location / {
            proxy_pass http://wellknown_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for development HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Error handling with fallback
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # SPA fallback
            try_files $uri $uri/ @fallback;
        }

        # Fallback for SPA routing
        location @fallback {
            proxy_pass http://wellknown_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Celery Flower monitoring
    server {
        listen 80;
        server_name flower.localhost;

        # Rate limiting
        limit_req zone=api burst=10 nodelay;

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        location / {
            proxy_pass http://celery-flower:5555;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
    }

    # Default server (fallback) with enhanced service discovery
    server {
        listen 80 default_server;
        server_name _;

        # Security headers for default server
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status": "healthy", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Service discovery endpoint
        location / {
            return 200 '{
                "message": "AU-VLP System",
                "version": "1.0.0",
                "services": {
                    "admin": "http://admin.localhost",
                    "wellknown": "http://wellknown.localhost",
                    "admin-api": "http://admin-api.localhost",
                    "wellknown-api": "http://wellknown-api.localhost",
                    "flower": "http://flower.localhost"
                },
                "health": "/health",
                "timestamp": "$time_iso8601"
            }';
            add_header Content-Type application/json;
        }

        # Block access to sensitive files
        location ~* \.(env|log|ini|conf|bak|old|tmp)$ {
            deny all;
            return 404;
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }
    }
}