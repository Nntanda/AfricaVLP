# Generated by Django 4.2.23 on 2025-08-01 07:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(choices=[('super_admin', 'Super Admin'), ('admin', 'Admin')], max_length=12)),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')])),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'admins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('scope_model', models.CharField(max_length=64)),
                ('scope_id', models.CharField(max_length=64)),
                ('issuer_model', models.CharField(blank=True, max_length=64, null=True)),
                ('issuer_id', models.CharField(blank=True, max_length=64, null=True)),
                ('object_model', models.CharField(blank=True, max_length=64, null=True)),
                ('object_id', models.CharField(blank=True, max_length=64, null=True)),
                ('level', models.CharField(max_length=16)),
                ('action', models.CharField(blank=True, max_length=64, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'activity_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminActivityLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('scope_model', models.CharField(max_length=64)),
                ('scope_id', models.CharField(max_length=64)),
                ('issuer_model', models.CharField(blank=True, max_length=64, null=True)),
                ('issuer_id', models.CharField(blank=True, max_length=64, null=True)),
                ('object_model', models.CharField(blank=True, max_length=64, null=True)),
                ('object_id', models.CharField(blank=True, max_length=64, null=True)),
                ('level', models.CharField(max_length=16)),
                ('action', models.CharField(blank=True, max_length=64, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin_activity_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'blog_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Published'), (2, 'Draft'), (3, 'Archived')], null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'blog_posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPostComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'blog_post_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPostTag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'blog_posts_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryOfOrganization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'category_of_organizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryOfResource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'category_of_resources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'cities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('iso', models.CharField(blank=True, max_length=2, null=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('nicename', models.CharField(blank=True, max_length=80, null=True)),
                ('iso3', models.CharField(blank=True, max_length=3, null=True)),
                ('numcode', models.SmallIntegerField(blank=True, null=True)),
                ('phonecode', models.IntegerField()),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Published'), (2, 'Draft'), (3, 'Archived')], null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='I18n',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('locale', models.CharField(max_length=6)),
                ('model', models.CharField(max_length=255)),
                ('foreign_key', models.IntegerField()),
                ('field', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'i18n',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstitutionType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'institution_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Published'), (2, 'Draft'), (3, 'Archived')], null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'news_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewsComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'news_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewsTag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'news_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('logo', models.CharField(blank=True, max_length=255, null=True)),
                ('government_affliliation', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_establishment', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.CharField(blank=True, max_length=20, null=True)),
                ('lng', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('website', models.CharField(blank=True, max_length=55, null=True)),
                ('facebook_url', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram_url', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter_url', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(default=1)),
                ('is_verified', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('pan_africanism', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('education_skills', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('health_wellbeing', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('no_poverty', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('agriculture_rural', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('democratic_values', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('environmental_sustainability', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('infrastructure_development', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('peace_security', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('culture', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('gender_inequality', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('youth_empowerment', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('reduced_inequality', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('sustainable_city', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('responsible_consumption', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
            ],
            options={
                'db_table': 'organizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationOffice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'organization_offices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'organization_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.IntegerField(default=1)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'organization_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublishingCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'publishing_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Published'), (2, 'Draft'), (3, 'Archived')], null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'resource_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'resource_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=191, null=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('short_profile', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, max_length=45, null=True)),
                ('profile_image', models.CharField(blank=True, max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_expires', models.DateTimeField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=45, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=15, null=True)),
                ('current_address', models.CharField(blank=True, max_length=255, null=True)),
                ('availability', models.CharField(blank=True, choices=[('Full time', 'Full time'), ('Part time', 'Part time')], max_length=10, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('preferred_language', models.CharField(blank=True, max_length=10, null=True)),
                ('registration_status', models.IntegerField(default=1)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(default=1)),
                ('has_volunteering_experience', models.BooleanField(blank=True, null=True)),
                ('volunteered_program', models.CharField(blank=True, max_length=255, null=True)),
                ('year_of_service', models.IntegerField(blank=True, null=True)),
                ('experience_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('task_name', models.CharField(db_index=True, max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('STARTED', 'Started'), ('SUCCESS', 'Success'), ('FAILURE', 'Failure'), ('RETRY', 'Retry'), ('REVOKED', 'Revoked')], default='PENDING', max_length=50)),
                ('result', models.JSONField(blank=True, null=True)),
                ('traceback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('args', models.JSONField(blank=True, help_text='Task arguments', null=True)),
                ('kwargs', models.JSONField(blank=True, help_text='Task keyword arguments', null=True)),
                ('retries', models.IntegerField(default=0)),
                ('eta', models.DateTimeField(blank=True, help_text='Estimated time of arrival', null=True)),
                ('started_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'task_results',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['task_name', 'status'], name='task_result_task_na_4c1de2_idx'), models.Index(fields=['created_at'], name='task_result_created_cb53b3_idx'), models.Index(fields=['started_by'], name='task_result_started_943ca2_idx')],
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('query', models.CharField(max_length=500)),
                ('results_count', models.IntegerField(default=0)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='models_app.user')),
            ],
            options={
                'db_table': 'search_history',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['query'], name='search_hist_query_69a772_idx'), models.Index(fields=['created_at'], name='search_hist_created_7f2b0d_idx'), models.Index(fields=['user'], name='search_hist_user_id_24152d_idx'), models.Index(fields=['admin'], name='search_hist_admin_i_d6f041_idx')],
            },
        ),
    ]
